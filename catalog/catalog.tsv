	Repo	Type	Name	Description	url
0	getzlab/AnnoMate	Repository	getzlab/AnnoMate	Review anything (purities, mutations, etc) within a jupyter notebook with plotly dash and jupyter widgets	https://github.com/getzlab/AnnoMate
1	getzlab/AnnoMate	AppComponent	AppComponents		https://github.com/getzlab/AnnoMate/blob/master/AnnoMate/AppComponents
2	getzlab/AnnoMate	AppComponent	CNVPlotComponent	"CNVPlotComponent.py module

Interactive CNV Plot with mutation multiplicity scatterplot

Mutation scatter interactive with mutation table

"	https://github.com/getzlab/AnnoMate/blob/master/AnnoMate/AppComponents/CNVPlotComponent.py
3	getzlab/AnnoMate	AppComponent	DataTableComponents	"
DataTableComponents module contains methods to generate components for displaying table information
"	https://github.com/getzlab/AnnoMate/blob/master/AnnoMate/AppComponents/DataTableComponents.py
4	getzlab/AnnoMate	AppComponent	MutationTableComponent	"MutationTableComponent.py module

Interactive Mutation Table with column selection, sorting, selecting, and filtering

"	https://github.com/getzlab/AnnoMate/blob/master/AnnoMate/AppComponents/MutationTableComponent.py
5	getzlab/AnnoMate	AppComponent	PhylogicComponents	"PhylogicComponents.py module

Phylogic CCF Plot and Trees implemented in the PatientReviewer and PhylogicReviewer

Phylogic PMF Plot implemented in the PhylogicReviewer

"	https://github.com/getzlab/AnnoMate/blob/master/AnnoMate/AppComponents/PhylogicComponents.py
6	getzlab/AnnoMate	AppComponent	__init__		https://github.com/getzlab/AnnoMate/blob/master/AnnoMate/AppComponents/__init__.py
7	getzlab/AnnoMate	AppComponent	utils	"Generates unique string for this mutation, including contig, start position, ref and alt alleles.

    Does not include End Position, for this field is not present in mut_ccfs Phylogic output. However, specification of both the alt and ref alleles are enough to distinguish InDels.

    :param row: pd.Series giving the data for one mutation from a maf or maf-like dataframe
    :param chrom: the name of the contig/chromosome column/field; default: Chromosome
    :param start_pos: the name of the start position column/field; default: Start_position
    :param ref: the name of the reference allele column/field; default: Reference_Allele
    :param alt: the name of the alternate allele column/field; default: Tumor_Seq_Allele
    "	https://github.com/getzlab/AnnoMate/blob/master/AnnoMate/AppComponents/utils.py
8	getzlab/AnnoMate	Reviewer	Reviewers		https://github.com/getzlab/AnnoMate/blob/master/AnnoMate/Reviewers
9	getzlab/AnnoMate	Reviewer	ExampleReviewer	"
        Creates a dataframe with index corresponding to the primary dataframe's index

        Parameters
        ----------
        sample_df: pd.DataFrame
            dataframe with samples data and sample ids in the index
        preprocessing_str: str
            Example of preprocessing data
        "	https://github.com/getzlab/AnnoMate/blob/master/AnnoMate/Reviewers/ExampleReviewer.py
10	getzlab/AnnoMate	Reviewer	__init__		https://github.com/getzlab/AnnoMate/blob/master/AnnoMate/Reviewers/__init__.py
11	getzlab/PurityReviewer	Repository	getzlab/PurityReviewer	Suite of purity reviewers and review components	https://github.com/getzlab/PurityReviewer
12	getzlab/PurityReviewer	AppComponent	AppComponents		https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/AppComponents
13	getzlab/PurityReviewer	AppComponent	AbsoluteCustomSolutionComponent		https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/AppComponents/AbsoluteCustomSolutionComponent.py
14	getzlab/PurityReviewer	AppComponent	AbsoluteSolutionsReportComponent		https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/AppComponents/AbsoluteSolutionsReportComponent.py
15	getzlab/PurityReviewer	AppComponent	__pycache__		https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/AppComponents/__pycache__
16	getzlab/PurityReviewer	AppComponent	AbsoluteCustomSolutionComponent.cpython-39		https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/AppComponents/__pycache__/AbsoluteCustomSolutionComponent.cpython-39.pyc
17	getzlab/PurityReviewer	AppComponent	AbsoluteSolutionsReportComponent.cpython-39		https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/AppComponents/__pycache__/AbsoluteSolutionsReportComponent.cpython-39.pyc
18	getzlab/PurityReviewer	AppComponent	utils.cpython-39		https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/AppComponents/__pycache__/utils.cpython-39.pyc
19	getzlab/PurityReviewer	AppComponent	utils		https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/AppComponents/utils.py
20	getzlab/PurityReviewer	Reviewer	Reviewers		https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/Reviewers
21	getzlab/PurityReviewer	Reviewer	ManualPurityReviewer	"Generate data for PurityReviewer object

        Returns
        -------
        GenericData
            Data object that contains only one dataframe
        "	https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/Reviewers/ManualPurityReviewer.py
22	getzlab/PurityReviewer	Reviewer	MatchedPurityReviewer	"Generate data for PurityReviewer object

        Returns
        -------
        GenericData
            Data object that contains only one dataframe
        "	https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/Reviewers/MatchedPurityReviewer.py
23	getzlab/PurityReviewer	Reviewer	__pycache__		https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/Reviewers/__pycache__
24	getzlab/PurityReviewer	Reviewer	ManualPurityReviewer.cpython-39		https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/Reviewers/__pycache__/ManualPurityReviewer.cpython-39.pyc
25	getzlab/PurityReviewer	Reviewer	MatchedPurityReviewer.cpython-39		https://github.com/getzlab/PurityReviewer/blob/master/PurityReviewer/Reviewers/__pycache__/MatchedPurityReviewer.cpython-39.pyc
26	getzlab/PatientReviewer	Repository	getzlab/PatientReviewer	Explore integrated data on the patient level interactively in a Dash App, powered by JupyterReviewer	https://github.com/getzlab/PatientReviewer
27	getzlab/PatientReviewer	AppComponent	AppComponents		https://github.com/getzlab/PatientReviewer/blob/master/PatientReviewer/AppComponents
28	getzlab/PatientReviewer	AppComponent	__init__		https://github.com/getzlab/PatientReviewer/blob/master/PatientReviewer/AppComponents/__init__.py
29	getzlab/PatientReviewer	Reviewer	Reviewers		https://github.com/getzlab/PatientReviewer/blob/master/PatientReviewer/Reviewers
30	getzlab/PatientReviewer	Reviewer	PatientReviewer	"PatientReviewer.py module

Interactive dashboard for reviewing and annotating data on a patient-by-patient basis
Includes app layout and callback functionality

Run by the user with a Jupyter Notebook: UserPatientReviewer.ipynb

"	https://github.com/getzlab/PatientReviewer/blob/master/PatientReviewer/Reviewers/PatientReviewer.py
31	getzlab/PatientReviewer	Reviewer	__init__		https://github.com/getzlab/PatientReviewer/blob/master/PatientReviewer/Reviewers/__init__.py
32	getzlab/MutationReviewer	Repository	getzlab/MutationReviewer		https://github.com/getzlab/MutationReviewer
33	getzlab/MutationReviewer	AppComponent	AppComponents		https://github.com/getzlab/MutationReviewer/blob/master/MutationReviewer/AppComponents
34	getzlab/MutationReviewer	AppComponent	BamTableComponent		https://github.com/getzlab/MutationReviewer/blob/master/MutationReviewer/AppComponents/BamTableComponent.py
35	getzlab/MutationReviewer	AppComponent	IGVJSComponent	"
    Callback function to generate an IGV.js window centered around the locus/loci of interest 
    and specified bams loaded when the Update Tracks button is clicked.
    
    Parameters
    ------
    update_tracks_n_clicks: State
        Dash.State of the number of times a button was clicked
        
    bam_table: State
        Dash.State object referencing a state of a dash component containing 
        a table with the bam files
        
    bam_table_selected_rows: State, list
        Dash.State object referencing a state of a dash component referencing 
        which rows are selected in a table with the bam files
        
    genome: string, default='hg19'
            Name of genome to use in IGV.js
        
    track_height: int, default=400
        Height to display each track in IGV.js mode

    minimumBases: int, default=200
        Minimum number of bases to display in a window in IGV.js mode
        
    gen_data_mut_index_name_func: func
        Function used to parse the index to filter the mutation table
        
    Return
    ------
    
    A dash_bio.IGV component
        Contains the tracks specified to load and window centering around the locus (or loci) of interest
    
    "	https://github.com/getzlab/MutationReviewer/blob/master/MutationReviewer/AppComponents/IGVJSComponent.py
36	getzlab/MutationReviewer	AppComponent	IGVLocalComponent	"
    Callback function to run when the data to review changes
    
    Parameters
    ----------
    update_tracks_n_clicks: State
        Dash.State of the number of times a button was clicked
        
    bam_table: State
        Dash.State object referencing a state of a dash component containing 
        a table with the bam files
        
    bam_table_selected_rows: State, list
        Dash.State object referencing a state of a dash component referencing 
        which rows are selected in a table with the bam files
        
    gen_data_mut_index_name_func: func
        Function used to parse the index to filter the mutation table
        
    Return
    ------
    
    No updates to the component will be made.
    
    "	https://github.com/getzlab/MutationReviewer/blob/master/MutationReviewer/AppComponents/IGVLocalComponent.py
37	getzlab/MutationReviewer	AppComponent	MutationTableComponent		https://github.com/getzlab/MutationReviewer/blob/master/MutationReviewer/AppComponents/MutationTableComponent.py
38	getzlab/MutationReviewer	AppComponent	utils		https://github.com/getzlab/MutationReviewer/blob/master/MutationReviewer/AppComponents/utils.py
39	getzlab/MutationReviewer	Reviewer	Reviewers		https://github.com/getzlab/MutationReviewer/blob/master/MutationReviewer/Reviewers
40	getzlab/MutationReviewer	Reviewer	DeprecatedMutationReviewer	"
        Parameters
        ==========
        mutations_df: pd.DataFrame,
        bams_df: pd.DataFrame,
        mutations_df_sample_col: str,
        chrom_col: str,
        start_pos_col: str,
        bam_df_sample_col: str,
        bam_col: str,
        bai_col: str,
        "	https://github.com/getzlab/MutationReviewer/blob/master/MutationReviewer/Reviewers/DeprecatedMutationReviewer.py
41	getzlab/MutationReviewer	Reviewer	GeneralMutationReviewer	"
        Parameters
        ----------
        mutations_df: pd.DataFrame
            Table of mutations to review. Each observed mutation has its own row (ie one mutation in each sample). 
            It must have columns containing information about:
                - Chromosome(s)
                - Position(s)
            
        mutation_groupby_cols: list
            Additional columns to group mutations in addition to the chromosome and position. 
            For example, you may group across a participant to view the same locus across all the samples from that participant. 
            You will need to have a column with the participant value in this table.
            
        mutations_df_bam_ref_col: str
            Column in mutations_df to reference which bam files to view in IGV from bams_df. 
            If you want to view all samples from the same participant (ie tumor and normal, or serial tumor samples), 
            the values in ""mutations_df_bam_ref_col"" must correspond to the values in the ""bams_df_ref_col"" column in bams_df.
        
        chrom_cols: Union[str, list]
            Column name(s) in mutations_df referencing the chromosome of the mutation. 
            You may have multiple loci if you are reviewing a large SV with two breakpoints ([chr1, chr2]).
            
        pos_cols: Union[str, list]
            Column name(s) in mutations_df referencing the position of the mutation. 
            You may have multiple loci if you are reviewing a large SV with two breakpoints ([chr1, chr2]).
            
        bams_df: pd.DataFrame
            Table with bam paths or urls
            
        bams_df_ref_col: str
            Column in bams_df with values to extract the relevant bams for a given mutation's mutations_df_bam_ref_col value 
            
        bam_cols: Union[str, list]
            Column(s) with bams to view
            
        bai_cols: Union[str, list]
            Column(s) with corresponding bai files to view bams. Corresponding bai columns must be in same order as the bam_cols
        "	https://github.com/getzlab/MutationReviewer/blob/master/MutationReviewer/Reviewers/GeneralMutationReviewer.py
42	getzlab/PhylogicReviewer	Repository	getzlab/PhylogicReviewer	Interactive app to review Phylogic solutions and data.	https://github.com/getzlab/PhylogicReviewer
43	getzlab/PhylogicReviewer	AppComponent	AppComponents		https://github.com/getzlab/PhylogicReviewer/blob/master/PhylogicReviewer/AppComponents
44	getzlab/PhylogicReviewer	AppComponent	__init__		https://github.com/getzlab/PhylogicReviewer/blob/master/PhylogicReviewer/AppComponents/__init__.py
45	getzlab/PhylogicReviewer	Reviewer	Reviewers		https://github.com/getzlab/PhylogicReviewer/blob/master/PhylogicReviewer/Reviewers
46	getzlab/PhylogicReviewer	Reviewer	PhylogicReviewer	"Class to facilitate reviewing Phylogic results in a consistent and efficient manner.

    Notes
    -----
    - Display CCF plot (pull code from Patient Reviewer)
    - Display mutations (pull code from Patient Reviewer)
    - Display trees (pull code from Patient Reviewer?)
        - Work on weighted tree viz
    - Display CN plots (pull code from old phylogic review code, with updated library use)**
         - Display mutations on CN plots
         - Allow filtering using mutations table
    - Metrics for coding vs. non_coding, silent vs. non_syn (coding), indels vs. SNPs summarized for each cluster**
        - Could output some statistics as well -> highlight sig differences from null
    - Integrated (link to run bash script) variant reviewer
    - View CCF pmf distributions for individual mutations**

    - Annotate:
        - Variants (add to variant_review file)
        - Cluster annotations (add to cluster blocklist? Only for final analysis though - better to block mutations)
            - Can also just annotate with notes
        - Notes generally
        - Select correct tree (save tree child-parent relationship, but how to associate clusters if you re-run?)
    "	https://github.com/getzlab/PhylogicReviewer/blob/master/PhylogicReviewer/Reviewers/PhylogicReviewer.py
47	getzlab/PhylogicReviewer	Reviewer	__init__		https://github.com/getzlab/PhylogicReviewer/blob/master/PhylogicReviewer/Reviewers/__init__.py
